// This is your Prisma schema file,
// learn more about it in the docs https//pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

 model User {
  id Int @id @default(autoincrement())
  name String
  userId String @unique
  email String @unique
  password String
  address String
  phone String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  auth Int @default(2)
  bookmark Item[]
  review Review[]
  itemAsk ItemAsk[]
}

model Item {
  id Int @id @default(autoincrement())
  itemCode String @unique
  itemName String
  price String
  color String[]
  size String[]
  category String
  thum String?
  photo String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  bookmark User[]
  review Review[]
  itemAsk ItemAsk[]
  // ItemDetail ItemDetail[]
}

// model ItemDetail{
//   id Int @id @default(autoincrement())
//   item Item @relation(fields [itemId], references [id])
//   itemId Int
//   photo String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Order {
  id Int @id @default(autoincrement())
  itemCode String
  itemName String
  price String
  color String
  size String
  userId String
  orderCode String 
  orderState String @default("상품준비중")
  payType String @default("무통장입금")
  thum String?
  createdAt DateTime @default(now())
  etc String?
}

model Cart {
  id Int @id @default(autoincrement())
  userId String
  itemCode String
  itemName String
  price String
  color String
  size String
  thum String?
}

model Notice {
  id Int @id @default(autoincrement())
  title String
  noticeText String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id Int @id @default(autoincrement())
  item Item @relation(fields: [itemId], references: [id])
  user User @relation(fields: [userId], references: [id])
  title String
  payload String
  grade Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  itemId Int
  userId Int
}

model ItemAsk {
  id Int @id @default(autoincrement())
  item Item @relation(fields: [itemId], references: [id])
  user User @relation(fields: [userId], references: [id])
  title String
  payload String
  onlyMe Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  itemId Int
  userId Int
}